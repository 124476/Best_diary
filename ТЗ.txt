Авторизация и роли пользователей:

1.Система должна поддерживать авторизацию для трех типов пользователей: ученики, учителя и администраторы.
	Ученики должны иметь доступ только для просмотра своих оценок и домашних заданий.
	Учителя должны иметь доступ для просмотра успеваемости своих учеников и выставления оценок.
	Администраторы должны иметь возможность управлять школами.

2.Интерфейс пользователя:
	Дизайн интерфейса должен быть разработан с использованием Bootstrap для обеспечения отзывчивости и совместимости с различными устройствами и экранами.

3.Функциональность для учеников:
	Ученики должны иметь возможность просматривать свои оценки.

4.Функциональность для учителей:
	Учителя должны иметь доступ к списку своих учеников.
	Должна быть возможность для учителей просматривать успеваемость своих учеников и выставлять оценки.\

5.Функциональность для администраторов:
	Администраторы должны иметь доступ к управлению школами, включая добавление, редактирование и удаление информации о школах.
	Должна быть возможность добавления и удаления учеников и учителей.

6.REST API:
	Необходимо разработать REST API для получения информации об оценках и учениках.
	API должно поддерживать операции CRUD (Read, Delete) для оценок и учеников.

7.Безопасность:
	Должны быть приняты меры безопасности для защиты личных данных пользователей.
	Пароли должны быть хешированы перед хранением в базе данных.
	Доступ к конфиденциальной информации должен быть ограничен соответствующим образом с учетом ролей пользователей.

8.Административная панель:
	Должна быть создана административная панель для управления учебными заведениями, пользователями и другой существенной информацией.

9.Расширяемость:
	Система должна быть разработана с учетом возможности расширения функциональности в будущем.